/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adminUI;

import clientUI.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import lab_archivos_.Pet;
import lab_archivos_.Service;

/**
 *
 * @author graba
 */
public class AdminBookServicePanel extends javax.swing.JPanel {

    int id = 0;

    /**
     * Creates new form BookServicePanel
     */
    public AdminBookServicePanel() throws IOException {
        initComponents();
        initData(horas, "Citas.txt");
        this.id = id;
    }

    private static ArrayList<String[]> readData(String fileRoute) {
        String linea;
        String[] div = {};
        String[] divSch = {};
        String newline;
        ArrayList datos = new ArrayList<String[]>();
        int c;
        try {
            File h = new File(fileRoute);
            FileReader fr = new FileReader(h);
            BufferedReader br = new BufferedReader(fr);
            linea = br.readLine();
            while (linea != null) {
                c = 0;
                div = linea.split(",");
                newline = div[0] + "," + div[1] + "," + div[2] + "," + div[3];
                divSch = newline.split(",");
                datos.add(divSch);
                linea = br.readLine();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return datos;
    }

    public static void initData(javax.swing.JTable horas, String fileRoute) {
        ArrayList<String[]> filas = readData(fileRoute);
        int d = 0;
        for (int i = 0; i <= filas.size() - 1; i++) {
            String[] fila = filas.get(i);
            //if (!fila[3].equals("Baño") && !fila[3].equals("Guarderia")) {
            for (int j = 0; j <= 5; j++) {
                if (horas.getColumnName(j).equals(fila[0])) {
                    d = j;
                }
            }
            for (int k = 0; k <= 19; k++) {
                if (horas.getValueAt(k, 0).equals(fila[1])) {
                    horas.setValueAt("RESERVADO", k, d);
                    //horas.setBackground( Color.RED );
                }
                if (horas.getValueAt(k, 0).equals(fila[2])) {
                    if (fila[3].equals("Baño")) {
                        horas.setValueAt("RESERVADO", k, d);
                        horas.setValueAt("RESERVADO", k - 1, d);
                        horas.setValueAt("RESERVADO", k - 2, d);
                    } else {
                        horas.setValueAt("RESERVADO", k, d);
                    }
                    //horas.setBackground( Color.RED );
                }
            }
            //}
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        serviceTypeComboBox = new javax.swing.JComboBox<>();
        boton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        horas = new javax.swing.JTable();
        ownersIDField = new javax.swing.JTextField();
        petField = new javax.swing.JTextField();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        serviceTypeComboBox.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        serviceTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consulta", "Control", "Desparasitación", "Vacunación", "Radiologia", "Baño" }));
        serviceTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serviceTypeComboBoxActionPerformed(evt);
            }
        });

        boton.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        boton.setText("Reservar");
        boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActionPerformed(evt);
            }
        });

        horas.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        horas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"8:00-8:30", null, null, null, null, null},
                {"8:30-9:00", null, null, null, null, null},
                {"9:00-9:30", null, null, null, null, null},
                {"9:30-10:00", null, null, null, null, null},
                {"10:00-10:30", null, null, null, null, null},
                {"10:30-11:00", null, null, null, null, null},
                {"11:00-11:30", null, null, null, null, null},
                {"11:30-12:00", null, null, null, null, null},
                {"12:00-12:30", null, null, null, null, null},
                {"12:30-13:00", null, null, null, null, null},
                {"13:00-13:30", null, null, null, null, null},
                {"13:30-14:00", null, null, null, null, null},
                {"14:00-14:30", null, null, null, null, null},
                {"14:30-15:00", null, null, null, null, null},
                {"15:00-15:30", null, null, null, null, null},
                {"15:30-16:00", null, null, null, null, null},
                {"16:00-16:30", null, null, null, null, null},
                {"16:30-17:00", null, null, null, null, null},
                {"17:00-17:30", null, null, null, null, null},
                {"17:30-18:00", null, null, null, null, null}
            },
            new String [] {
                "Horas", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        horas.setAutoscrolls(false);
        horas.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(horas);

        ownersIDField.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        ownersIDField.setText("Cedula");
        ownersIDField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ownersIDFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ownersIDFieldFocusLost(evt);
            }
        });

        petField.setFont(new java.awt.Font("Bahnschrift", 0, 12)); // NOI18N
        petField.setText("Mascota");
        petField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                petFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                petFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(serviceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ownersIDField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(petField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boton, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(boton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(serviceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ownersIDField)
                    .addComponent(petField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void serviceTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serviceTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serviceTypeComboBoxActionPerformed

    private void botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActionPerformed
        if (!ownersIDField.getText().equals("Cedula") && !petField.getText().equals("Mascota")) {
            String h1 = Service.getTimeLapse(serviceTypeComboBox, horas).get(0);
            String h2 = Service.getTimeLapse(serviceTypeComboBox, horas).get(1);
            int x = horas.getSelectedRow();
            int y = horas.getSelectedColumn();
            String serviceType = (String) serviceTypeComboBox.getSelectedItem();
            String petName = (String) petField.getText();
            int id = Integer.parseInt(ownersIDField.getText());
            String d = horas.getColumnName(y);
            Service service = new Service(d, h1, h2, serviceType, id, petName);
            service.bookService(horas);
        }
        initData(horas, "Citas.txt");
    }//GEN-LAST:event_botonActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
        initData(horas, "Citas.txt");
    }//GEN-LAST:event_formFocusGained

    private void ownersIDFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ownersIDFieldFocusGained
        // TODO add your handling code here:
        if (ownersIDField.getText().equals("Cedula")) {
            ownersIDField.setText("");
        }
    }//GEN-LAST:event_ownersIDFieldFocusGained

    private void petFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_petFieldFocusGained
        // TODO add your handling code here:
        if (petField.getText().equals("Mascota")) {
            petField.setText("");
        }
    }//GEN-LAST:event_petFieldFocusGained

    private void ownersIDFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ownersIDFieldFocusLost
        // TODO add your handling code here:
        if (ownersIDField.getText().equals("")) {
            ownersIDField.setText("Cedula");
        }
    }//GEN-LAST:event_ownersIDFieldFocusLost

    private void petFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_petFieldFocusLost
        if (petField.getText().equals("")) {
            petField.setText("Mascota");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_petFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton;
    public javax.swing.JTable horas;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField ownersIDField;
    private javax.swing.JTextField petField;
    public javax.swing.JComboBox<String> serviceTypeComboBox;
    // End of variables declaration//GEN-END:variables
}
